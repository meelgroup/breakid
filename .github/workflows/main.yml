name: binary build

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-14, ubuntu-latest-arm, windows-2022, macos-13]
        build_type: ['Release']
        staticcompile: ['ON', 'OFF']

    steps:
    - uses: actions/checkout@v4.1.1

    # install dependencies
    - name: Install boost & help2man for Linux
      if: contains(matrix.os, 'ubuntu')
      run: sudo apt-get update && sudo apt-get install -yq help2man

    - name: Add git submodules for Linux only (not needed for non-testing)
      if: contains(matrix.os, 'ubuntu')
      run: git submodule update --init

    - name: Configure CMake for linux
      if: contains(matrix.os, 'ubuntu')
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DENABLE_TESTING=ON  -DSTATICCOMPILE=${{ matrix.staticcompile }}

    - name: Configure CMake for non-linux
      if: matrix.os != 'ubuntu-20.04'
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DENABLE_TESTING=OFF -DSTATICCOMPILE=${{ matrix.staticcompile }}

    - name: Build
      run: cmake --build . --config ${{ matrix.build_type }}

    - name: Test
      run: ctest -C ${{ matrix.build_type }}

    - name: Upload Artifact - LinuxAMD64
      if: contains(matrix.os, 'ubuntu') && matrix.staticcompile == 'ON' && !contains(matrix.os, 'arm')
      uses: actions/upload-artifact@v4
      with:
        name: breakid-linux-amd64
        path: breakid

    - name: Upload Artifact - LinuxARM64
      if: contains(matrix.os, 'ubuntu') && matrix.staticcompile == 'ON' && contains(matrix.os, 'arm')
      uses: actions/upload-artifact@v4
      with:
        name: breakid-linux-amd64
        path: breakid

    - name: Upload Artifact - MacAMD64
      if: contains(matrix.os, 'macos-13') && matrix.staticcompile == 'ON'
      uses: actions/upload-artifact@v4
      with:
        name: breakid-mac-amd64
        path: breakid

    - name: Upload Artifact - MacARM64
      if: contains(matrix.os, 'macos-14') && matrix.staticcompile == 'ON'
      uses: actions/upload-artifact@v4
      with:
        name: breakid-mac-arm64
        path: breakid

    - name: Upload Artifact - Windows
      if: contains(matrix.os, 'windows') && matrix.staticcompile == 'ON'
      uses: actions/upload-artifact@v4
      with:
        name: breakid-win64.exe
        path: Release\breakid.exe
